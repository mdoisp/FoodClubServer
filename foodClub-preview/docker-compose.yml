services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DB_DIALECT=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=foodclub
      - DB_PASS=foodclub
      - DB_NAME=foodclub_db
      - JWT_SECRET=seu_jwt_secret
    command: sh -c "npm i -g @nestjs/cli && npm run start:dev"
    networks:
      - foodclub-network
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=foodclub
      - POSTGRES_PASSWORD=foodclub
      - POSTGRES_DB=foodclub_db
    networks:
      - foodclub-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foodclub"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@foodclub.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    networks:
      - foodclub-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  foodclub-network:
    driver: bridge 