name: CI/CD Pipeline

on:
  push:
    branches: 
      - "development"
      - "main"
  pull_request:
    branches:
      - "main"
      - "development"

permissions:
  contents: read
  packages: write
  pull-requests: write
  issues: write

env:
  DOCKER_HUB_REPOSITORY: ${{ secrets.DOCKER_HUB_USERNAME }}/foodclub-server
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    name: Build e Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      
      - name: Build
        run: npm run build

      - name: Generate version
        id: version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          
          if [ "$latest_tag" = "v0.0.0" ] && [ ! -f .version-initialized ]; then
            git tag v0.0.0
            touch .version-initialized
          fi
          
          major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          
          if git rev-list $latest_tag..HEAD --count > /dev/null 2>&1; then
            commits=$(git log $latest_tag..HEAD --pretty=format:"%s")
          else
            commits=""
          fi
          
          if [ -n "$commits" ]; then
            if echo "$commits" | grep -iE "BREAKING|MAJOR"; then
              major=$((major + 1))
              minor=0
              patch=0
            elif echo "$commits" | grep -iE "feat|feature|MINOR"; then
              minor=$((minor + 1))
              patch=0
            else
              patch=$((patch + 1))
            fi
          fi
          
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            new_version="v$major.$minor.$patch-dev"
          else
            new_version="v$major.$minor.$patch"
          fi
          
          echo "NEW_VERSION=${new_version}" >> $GITHUB_ENV
          echo "version=${new_version}" >> $GITHUB_OUTPUT
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Set Docker tags
        id: docker_tags
        run: |
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "${{ env.DOCKER_HUB_REPOSITORY }}:${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.ref == 'refs/heads/development' && 'development' || 'latest' }}" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}

      - name: Create Git tag
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push origin ${{ steps.version.outputs.version }}

      - name: Send email on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: '‚ùå Falha no Pipeline - FoodClub Server'
          body: |
            Ocorreu uma falha no pipeline de CI/CD do FoodClub Server.
            
            Detalhes:
            - Branch: ${{ github.ref }}
            - Commit: ${{ github.sha }}
            - Autor: ${{ github.actor }}
            
            Para mais detalhes, acesse:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_TO }}
          from: GitHub Actions 